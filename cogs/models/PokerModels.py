# PokerModels.py

from ..DB import Data
from ..configs import MainConfig as MC
from discord.ext import commands
# from discord import Interaction

class Room(Data):
    def __init__(self, –ù–∞–∑–≤–∞–Ω–∏–µ):
        self.row = Data.Room.find_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": –ù–∞–∑–≤–∞–Ω–∏–µ})
        if not self.row:
            raise ValueError(f"–ö–æ–º–Ω–∞—Ç–∞ '{–ù–∞–∑–≤–∞–Ω–∏–µ}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        self.–ù–∞–∑–≤–∞–Ω–∏–µ = self.row["–ù–∞–∑–≤–∞–Ω–∏–µ"]
        self.–£—á–∞—Å—Ç–Ω–∏–∫–∏ = self.row["–£—á–∞—Å—Ç–Ω–∏–∫–∏"]
        self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤ = self.row["–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤"]
        self.–ú–∞–∫—Å–∏–º—É–º_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ = self.row["–ú–∞–∫—Å–∏–º—É–º_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"]
        self.–ü–∞—Ä–æ–ª—å = self.row["–ü–∞—Ä–æ–ª—å"]
        self.–ü—Ä–∞–≤–∏–ª–∞ = self.row["–ü—Ä–∞–≤–∏–ª–∞"]
        self.–°–æ–∑–¥–∞—Ç–µ–ª—å = self.row["–°–æ–∑–¥–∞—Ç–µ–ª—å"]
        self.–ö–∞–Ω–∞–ª = self.row["–ö–∞–Ω–∞–ª"]
        self.–†–æ–ª—å = self.row["–†–æ–ª—å"]
        self.–ß–° = self.row["–ß–°"]
        self.ID_–°–µ—Ä–≤–µ—Ä–∞ = self.row["ID_–°–µ—Ä–≤–µ—Ä–∞"]
        self.–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞ = self.row["–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞"]
        self.–ú–∏–Ω_—Å—Ç–∞–≤–∫–∞ = self.row["–ú–∏–Ω_—Å—Ç–∞–≤–∫–∞"]
        self.–ú–∞–∫—Å_—Å—Ç–∞–≤–∫–∞ = self.row["–ú–∞–∫—Å_—Å—Ç–∞–≤–∫–∞"]
        self.–¢–µ–∫—É—â–∞—è_—Å—Ç–∞–≤–∫–∞ = self.row["–¢–µ–∫—É—â–∞—è_—Å—Ç–∞–≤–∫–∞"]
        self.–¢–∏–ø_—Å—Ç–∞–≤–æ–∫ = self.row["–¢–∏–ø_—Å—Ç–∞–≤–æ–∫"]
        self.–¢–µ–∫—É—â–∏–π_—Ä–∞—É–Ω–¥ = self.row["–¢–µ–∫—É—â–∏–π_—Ä–∞—É–Ω–¥"]
        self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥ = self.row["–¢–µ–∫—É—â–∏–π_—Ö–æ–¥"]
        self.–ö—Ä—É–≥ = self.row["–ö—Ä—É–≥"]
        self.–ë–∞–Ω–∫_–æ–±—â–∏–π = self.row["–ë–∞–Ω–∫_–æ–±—â–∏–π"]
        self.–ë–∞–Ω–∫_—Ä–∞—É–Ω–¥–∞ = self.row["–ë–∞–Ω–∫_—Ä–∞—É–Ω–¥–∞"]
        self.–ö–æ–ª–æ–¥–∞ = self.row["–ö–æ–ª–æ–¥–∞"]
        self.–í—Ä–µ–º—è = self.row["–í—Ä–µ–º—è"]


#                      ------  –ú–û–î–ï–†–ê–¶–ò–Ø –ö–û–ú–ù–ê–¢–´   ------

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    def add_member(self, member_id):
        if member_id in self.–£—á–∞—Å—Ç–Ω–∏–∫–∏:
            raise ValueError("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–æ–º–Ω–∞—Ç–µ.")
        if len(self.–£—á–∞—Å—Ç–Ω–∏–∫–∏) >= self.–ú–∞–∫—Å–∏–º—É–º_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:
            raise ValueError("–ö–æ–º–Ω–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.")
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$push": {"–£—á–∞—Å—Ç–Ω–∏–∫–∏": member_id}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ) # —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã

    # –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    def remove_member(self, member_id):
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$pull": {"–£—á–∞—Å—Ç–Ω–∏–∫–∏": member_id}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–æ–º–Ω–∞—Ç—ã
    def update_field(self, field: str, value):
        """
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è: {field}, –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {value}")  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π +
        if isinstance(value, list):
            print("–ü–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫")  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ (–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫, –∫–æ–Ω–µ—á–Ω–æ) +
        """
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {field: value}})
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    def delete_room(self):
        Data.Room.delete_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ})
        #return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ß–°
    def add_member_BL(self, member_id):
        if member_id in self.–ß–°:
            raise ValueError("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –ß–°.")
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$push": {"–ß–°": member_id}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ) # —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ß–°
    def remove_member_BL(self, member_id):
        if not (member_id in self.–ß–°):
            raise ValueError("–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –Ω–µ—Ç –≤ –ß–°.")
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$pull": {"–ß–°": member_id}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ) # —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç
    @staticmethod
    def format_room_list(rooms): # , interaction: Interaction
        formatted_rooms = []
        n: int = 0 # —Å—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ –∫–æ–º–Ω–∞—Ç –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–¥–æ 10 —à—Ç. –Ω–∞ —Å—Ç—Ä.)
        room_info: str = '' # —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç –Ω–∞ –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        for room in rooms:
            n += 1
            # print('room\n', room, n) # +
            password_icon = "üîê" if room["–ü–∞—Ä–æ–ª—å"] else "" # üîê üîí
            –Ω–∞–∑–≤–∞–Ω–∏–µ = room['–ù–∞–∑–≤–∞–Ω–∏–µ']
            room_info +=    f"> {n}. {–Ω–∞–∑–≤–∞–Ω–∏–µ} {password_icon}\n" \
                            f"> ```{–Ω–∞–∑–≤–∞–Ω–∏–µ}```" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {len(room['–£—á–∞—Å—Ç–Ω–∏–∫–∏'])}/{room['–ú–∞–∫—Å–∏–º—É–º_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤']}\n" \
                            f"> –°–æ–∑–¥–∞—Ç–µ–ª—å: <@{room['–°–æ–∑–¥–∞—Ç–µ–ª—å']}>\n" \
                            f"> –ú–∏–Ω. —Å—Ç–∞–≤–∫–∞: {room['–ú–∏–Ω_—Å—Ç–∞–≤–∫–∞']}\n" \
                            f"> –ú–∞–∫—Å. —Å—Ç–∞–≤–∫–∞: {room['–ú–∞–∫—Å_—Å—Ç–∞–≤–∫–∞']}"
            room_info += "\n\n"
            if n % 10 == 0: # –∫–∞–∂–¥—ã–µ –¥–µ—Å—è—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä: (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∫–∞–∂–¥—ã–µ 15, —Ç–æ if n % 15 == 0 –∏ —Ç.–¥.)
                formatted_rooms.append(room_info)
                room_info = '' # –æ–±–Ω—É–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            else: pass
        formatted_rooms.append(room_info) # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –¥–µ—Å—è—Ç–æ–∫
        # print('formatted_rooms\n', formatted_rooms) # +
        return formatted_rooms # –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏–º –≤–µ—Ä–Ω—É—Ç—å –Ω–µ —Å–ø–∏—Å–æ–∫, –∞ —Ç–µ–∫—Å—Ç–æ–º –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã —Å—Ä–∞–∑—É, —Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "\n\n".join(formatted_rooms)




#                      ------  –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–´   ------

    # ------    –•–û–î–´    ------

# –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–æ–¥–æ–≤ (inc) - –ø—Ä–∏–±–∞–≤–∏—Ç—å
    def —Å–ª–µ–¥_—Ö–æ–¥(self):
        print('—Å–ª–µ–¥_—Ö–æ–¥')
        print('—Å–ª–µ–¥_—Ö–æ–¥ - –ö–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ', len(self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤), '\n–•–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–π (1) –∏–ª–∏ –≤—Ç–æ—Ä–æ–π (2): ', self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥+1)
        if len(self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤) == self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥+1: # –µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ö–æ–¥–∞ —ç—Ç–æ–≥–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–º (—Ä–∞–≤–µ–Ω –∫–æ–ª-–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤), —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö–æ–¥—ã
            print('—Å–ª–µ–¥_—Ö–æ–¥ - —Å–æ–≤–ø–∞–ª–æ, —Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π, –º–µ–Ω—è–µ–º –∫—Ä—É–≥ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö–æ–¥')
            Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–¢–µ–∫—É—â–∏–π_—Ö–æ–¥': 0, '–ö—Ä—É–≥': True}}) # –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–µ—Ä–≤–æ–º—É —Ö–æ–¥—É (0), –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –ø—Ä–æ—à—ë–ª 1 –∫—Ä—É–≥
        else:
            Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$inc": {'–¢–µ–∫—É—â–∏–π_—Ö–æ–¥': 1}}) # –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É (+1)
            print('—Å–ª–µ–¥_—Ö–æ–¥ - –Ω–µ —Å–æ–≤–ø–∞–ª–æ, —Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ')
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

# –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–æ–¥–æ–≤ –ø—Ä–∏ FOLD (–≤—ã—Ö–æ–¥–µ –æ–¥–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –∏–≥—Ä—ã)
    def —Å–ª–µ–¥_—Ö–æ–¥_—Ñ–æ–ª–¥(self):
        print('—Å–ª–µ–¥_—Ö–æ–¥')
        print('—Å–ª–µ–¥_—Ö–æ–¥ - –ö–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ', len(self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤), '\n–•–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–π (1) –∏–ª–∏ –≤—Ç–æ—Ä–æ–π (2): ', self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥+1)
        if len(self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤) == self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥+1: # –µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ö–æ–¥–∞ —ç—Ç–æ–≥–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–º (—Ä–∞–≤–µ–Ω –∫–æ–ª-–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤), —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö–æ–¥—ã
            Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–¢–µ–∫—É—â–∏–π_—Ö–æ–¥': 0, '–ö—Ä—É–≥': True}}) # –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–µ—Ä–≤–æ–º—É —Ö–æ–¥—É (0), –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –ø—Ä–æ—à—ë–ª 1 –∫—Ä—É–≥
            print('—Å–ª–µ–¥_—Ö–æ–¥ - —Å–æ–≤–ø–∞–ª–æ, —Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π, –º–µ–Ω—è–µ–º –∫—Ä—É–≥ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ö–æ–¥')
        else: pass
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)
    
# –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π ID –∏–∑ —Å–ø–∏—Å–∫–∞ '–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤' (fold)
    def –æ—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å_–∏–≥—Ä–æ–∫–∞(self, user_id: int):
        """
        –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π ID –∏–∑ —Å–ø–∏—Å–∫–∞ '–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤' (fold)
        user_id: ID, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞.
        """
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$pull": {"–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤": user_id}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã


    # ------    –†–ê–£–ù–î–´    ------

# –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—É–Ω–¥–æ–≤ (–æ—Ç–ø—Ä–∞–∞–≤–ª—è–µ–º —Å—é–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—É–Ω–¥–∞)
    def —Å–ª–µ–¥_—Ä–∞—É–Ω–¥(self, —Ä–∞—É–Ω–¥: str):
        print('—Å–ª–µ–¥_—Ä–∞—É–Ω–¥')
        print('—Å–ª–µ–¥_—Ä–∞—É–Ω–¥ - –ù–∞—á–∞–ª—Å—è —Å–ª–µ–¥—É—é—â–∏–π –∫—Ä—É–≥? ', self.–ö—Ä—É–≥)
        if self.–ö—Ä—É–≥: # –° –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞ (–∫—Ä–æ–º–µ –ø—Ä–µ—Ñ–ª–æ–ø–∞) –Ω–∞—á–∏–Ω–∞—é—Ç —Ö–æ–¥–∏—Ç—å —Å –º–∞–ª–æ–≥–æ –±–ª–∞–π–Ω–¥–∞ (–ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ '–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤')
            Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–¢–µ–∫—É—â–∏–π_—Ö–æ–¥': 0}})
            print('—Å–ª–µ–¥_—Ä–∞—É–Ω–¥ - –∫—Ä—É–≥ –Ω–∞—á–∞–ª—Å—è')
            '''
            –ï—Å–ª–∏ 2 –∏–≥—Ä–æ–∫–∞, —Ç–æ –ø–æ—Å–ª–µ /–ø–æ–∫–µ—Ä –±–æ–ª—å—à–æ–π_–±–ª–∞–π–Ω–¥ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è '–¢–µ–∫—É—â–∏–π_—Ö–æ–¥' –∏ —Ç–∞–∫ –∏ —Ç–∞–∫ –±—É–¥–µ—Ç = 0
            –ï—Å–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ 2, —Ç–æ –ø–æ—Å–ª–µ /–ø–æ–∫–µ—Ä –±–æ–ª—å—à–æ–π_–±–ª–∞–π–Ω–¥ '–ö—Ä—É–≥' –±—É–¥–µ—Ç False —Ç.–∫. –≤ def —Å–ª–µ–¥_—Ö–æ–¥(self) –≤—ã—à–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —É—Å–ª–æ–≤–∏–µ if len(self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤) == self.–¢–µ–∫—É—â–∏–π_—Ö–æ–¥+1
            '''
        else: pass
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–¢–µ–∫—É—â–∏–π_—Ä–∞—É–Ω–¥': —Ä–∞—É–Ω–¥, '–ö—Ä—É–≥': False}}) # –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É, 
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ —Å—Ç–∞–≤–æ–∫ —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º —Ä–∞—É–Ω–¥–µ (–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥. —Ä–∞—É–Ω–¥)
    def —Å—Ç–∞–≤–∫–∏_—Ä–∞–≤–Ω—ã(self) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–≤–Ω—ã –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è '–°–µ–π—á–∞—Å_–ø–æ—Å—Ç–∞–≤–∏–ª' —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
        :return: True, –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã, –∏–Ω–∞—á–µ False.
        """
        —Å—Ç–∞–≤–∫–∏ = [
            Data.Player.find_one({"id": user_id})["–°–µ–π—á–∞—Å_–ø–æ—Å—Ç–∞–≤–∏–ª"]
            for user_id in self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤   # –ë–µ—Ä—ë–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ø–æ–ª—è '–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤'
        ]
        return len(set(—Å—Ç–∞–≤–∫–∏)) == 1
    # set - "–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä", —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã 

    # ------    –°–¢–ê–í–ö–ò    ------

# —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
    def –Ω–æ–≤–∞—è_—Å—Ç–∞–≤–∫–∞(self, —Å—Ç–∞–≤–∫–∞: int): # –ø—Ä–µ–¥–∞—ë–º –Ω–æ–≤—É—é —Å—Ç–∞–≤–∫—É (–∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π)
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–¢–µ–∫—É—â–∞—è_—Å—Ç–∞–≤–∫–∞': —Å—Ç–∞–≤–∫–∞}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)
    
# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫
    def –æ–±–Ω–æ–≤–ª—è–µ–º_–±–∞–Ω–∫(self, —Å—Ç–∞–≤–∫–∞: int): # –ø—Ä–µ–¥–∞—ë–º —Å—Ç–∞–≤–∫—É
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$inc": {'–ë–∞–Ω–∫_—Ä–∞—É–Ω–¥–∞': —Å—Ç–∞–≤–∫–∞, '–ë–∞–Ω–∫_–æ–±—â–∏–π': —Å—Ç–∞–≤–∫–∞}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)
    
# –æ–±–Ω—É–ª—è–µ–º –±–∞–Ω–∫ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞ (–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–æ —Å–º–µ–Ω–æ–π —Ä–∞—É–Ω–¥–∞)
    def –æ–±–Ω—É–ª—è–µ–º_–±–∞–Ω–∫(self): # –ø—Ä–µ–¥–∞—ë–º —Å—Ç–∞–≤–∫—É
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {'–ë–∞–Ω–∫_—Ä–∞—É–Ω–¥–∞': 0}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è –ø–æ–ª—è '–°–µ–π—á–∞—Å_–ø–æ—Å—Ç–∞–≤–∏–ª' —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    def —Å–±—Ä–æ—Å–∏—Ç—å_—Å—Ç–∞–≤–∫–∏(self):
        for —É—á–∞—Å—Ç–Ω–∏–∫_id in self.–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤:  # –ë–µ—Ä—ë–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤
            Data.Player.update_one({"id": —É—á–∞—Å—Ç–Ω–∏–∫_id}, {"$set": {"–°–µ–π—á–∞—Å_–ø–æ—Å—Ç–∞–≤–∏–ª": 0}})


    # ------    –ö–ê–†–¢–´    ------

# –ò–∑–º–µ–Ω—è–µ–º –ø–æ–ª–µ –ö–æ–ª–æ–¥–∞: —É–º–µ–Ω—å—à–∞–µ–º –ø—Ä–∏ —Ä–∞–∑–¥–∞—á–µ 
    def –æ–±–Ω–æ–≤–ª—è–µ–º_–∫–æ–ª–æ–¥—É(self, –∫–∞—Ä—Ç—ã: list): # –∫–∞—Ä—Ç—ã: —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–ª–µ '–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞'.
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {"–ö–æ–ª–æ–¥–∞": –∫–∞—Ä—Ç—ã}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/–ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª–µ '–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞' 
    def —Å—Ç–æ–ª_—Ä–∞–∑–¥–∞—Ç—å(self, –∫–∞—Ä—Ç—ã: list): # –∫–∞—Ä—Ç—ã: —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–ª–µ '–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞'.
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {"–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞": –∫–∞—Ä—Ç—ã}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –∑–∞–ø–∏—Å–∏ –∫–∞—Ä—Ç (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—è —Å–ø–∏—Å–æ–∫.)
    def —Å—Ç–æ–ª_–¥–æ–±–∞–≤–∏—Ç—å(self, –∫–∞—Ä—Ç—ã: list): # –∫–∞—Ä—Ç—ã: —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ–ª–µ '–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞'.
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$push": {"–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞": {"$each": –∫–∞—Ä—Ç—ã}}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)


    # ------    –ö–û–ù–ï–¶ –ò–ì–†–´    ------

# –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–º–Ω–∞—Ç–µ
    def —Å–±—Ä–æ—Å_–∫–æ–º–Ω–∞—Ç—ã(self):
        Data.Room.update_one({"–ù–∞–∑–≤–∞–Ω–∏–µ": self.–ù–∞–∑–≤–∞–Ω–∏–µ}, {"$set": {
"–ü–æ—Ä—è–¥–æ–∫_—Ö–æ–¥–æ–≤": [],  # –ü–æ—Ä—è–¥–æ–∫ —Ö–æ–¥–æ–≤
"–ö–∞—Ä—Ç—ã_—Å—Ç–æ–ª–∞": [],
"–¢–µ–∫—É—â–∞—è_—Å—Ç–∞–≤–∫–∞": 0,
"–¢–µ–∫—É—â–∏–π_—Ä–∞—É–Ω–¥": "–Ω–µ –Ω–∞—á–∞—Ç–∞", # –Ω–µ –Ω–∞—á–∞—Ç–∞
"–¢–µ–∫—É—â–∏–π_—Ö–æ–¥": 0,
"–ë–∞–Ω–∫_–æ–±—â–∏–π": 0,
"–ë–∞–Ω–∫_—Ä–∞—É–Ω–¥–∞": 0,
"–ö–æ–ª–æ–¥–∞": [],  # –ù–µ—Ä–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã (–±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω)
"–í—Ä–µ–º—è": None # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ö–æ–¥–∞
}})
        return self.__init__(self.–ù–∞–∑–≤–∞–Ω–∏–µ)


async def setup(bot: commands.Bot) -> None:
    await bot.add_cog(Room(bot))